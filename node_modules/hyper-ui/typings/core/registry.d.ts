import { HDesc } from "./HNode";
import { Store } from "./Store";
import { EleProps } from "./propHandlers";
export interface HType<P extends object = EleProps, S extends object = any, C extends object = any> {
    (props: P, store: Store<S>, context: Store<C>): any;
}
export declare const registry: Map<string | HType<any, any, any>, HDesc<any, any, any>>;
export declare const define: <P extends object = EleProps<Element>, S extends object = any, C extends object = any>(name: string, desc: HDesc<P, S, C>) => HType<P, S, C>;
