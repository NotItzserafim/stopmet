import { HNode } from "../core/HNode";
import { EleProps } from "../core/propHandlers";
export declare const toArr: <T>(a: T) => T extends any[] ? T : [T];
export declare const toFrag: (nodes: Node[]) => Node;
export declare const isHNode: (value: unknown) => value is HNode<any, any, any>;
export declare const replaceNodes: (ownerNode: Node, oldNodes: Node[], newNodes: Node[]) => void;
export declare const inherit: (target: HNode<EleProps<Element>, any, any>, source: HNode<EleProps<Element>, any, any>) => void;
export declare type SpliceArgs<T = any> = [number, number, ...T[]];
